//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.0
//     from Assets/Settings/Inputs/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace KingPong.Inputs
{
    public partial class @PlayerActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""6e24b70b-2d32-4e73-b7ba-a0f022579e12"",
            ""actions"": [
                {
                    ""name"": ""Velocity"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3236854a-a6cb-4906-8d3e-b00d7c37bf2d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""AutoShot"",
                    ""type"": ""Button"",
                    ""id"": ""d555c278-4b61-4bf8-8571-ba374fa97d2e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""Emote"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2ca27ef3-edc6-454d-b5da-cf3ba89f1cc9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """"
                },
                {
                    ""name"": ""OpenMenu"",
                    ""type"": ""Button"",
                    ""id"": ""666cf441-fde1-443b-9fe8-252d6d087e6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press""
                },
                {
                    ""name"": ""SpecialShoot"",
                    ""type"": ""Button"",
                    ""id"": ""300942b1-7f99-4b2a-91bc-858f114c174f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""07541740-13e3-4d61-a417-a98ff5789171"",
                    ""path"": ""<OculusTouchController>{RightHand}/deviceVelocity"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Velocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a0e4558-43e8-41f9-a2e0-98943e4776de"",
                    ""path"": ""<XRController>{LeftHand}/deviceVelocity"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Velocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22b94a07-7330-4eb2-a52e-407dc95da785"",
                    ""path"": ""<XRController>{RightHand}/deviceVelocity"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Velocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f67491d9-bd24-4cde-8118-6afec1b7161f"",
                    ""path"": ""<ViveWand>{RightHand}/deviceVelocity"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Velocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2e515cb-0cf5-4319-bbd9-4c93cafe10d4"",
                    ""path"": ""<ViveWand>{LeftHand}/deviceVelocity"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Velocity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ade64073-8dd5-492f-af7a-797305752c39"",
                    ""path"": ""<OculusTouchController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AutoShot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1189777b-98cf-4e5b-ac19-6a0ec771bbda"",
                    ""path"": ""<OculusTouchController>/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Emote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7abaeaa7-349a-4795-b710-253398bc891b"",
                    ""path"": ""<XRController>/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Emote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91f263db-1a4b-4cf5-bf61-42b7d36d0fd8"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96788136-1ce4-4918-8a69-87a0c3248877"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2eee8466-c591-4709-9178-a4b3e58ccace"",
                    ""path"": ""<XRController>{LeftHand}/triggerPressed"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b96e225a-1213-4ce0-afef-7470dc021071"",
                    ""path"": ""<XRController>{RightHand}/triggerPressed"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b321cbb-d765-42d5-9015-cacdcc99370d"",
                    ""path"": ""<ViveWand>{RightHand}/triggerPressed"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""649047dc-9677-45ff-90c7-3bf8f1643369"",
                    ""path"": ""<ViveWand>{LeftHand}/triggerPressed"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5567882-fea8-4e3c-a13a-6e4a0ad7c2ad"",
                    ""path"": ""<XRController>{LeftHand}/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23b8514b-3240-491b-83f0-1f910b86cb42"",
                    ""path"": ""<ViveWand>{RightHand}/primary"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb22e8d1-e93e-4aa5-a4e1-f3492c77ff3e"",
                    ""path"": ""<ViveWand>{LeftHand}/primary"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""d6a393fd-5285-4049-8e0d-cd2ec341ecb9"",
            ""actions"": [
                {
                    ""name"": ""HideMenu"",
                    ""type"": ""Button"",
                    ""id"": ""63cfaa8e-079b-42b5-8c9a-ccaa6297fc91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press""
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""96954ee3-1f12-4df9-850b-bbe944a7a3bb"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""784eaef2-ad8c-4862-842c-b3f8d1ad28bf"",
                    ""path"": ""<XRController>{LeftHand}/start"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d039323d-03bb-473c-86cc-f8d53115142b"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Oculus"",
            ""id"": ""885b3b42-d11a-4340-a320-907c65ec8762"",
            ""actions"": [
                {
                    ""name"": ""Dashboard"",
                    ""type"": ""Button"",
                    ""id"": ""74bf7729-cd01-49cf-8f9d-c3a81dfd021c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """"
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cbc012bf-469a-4741-875e-f29e723a13c5"",
                    ""path"": ""<XRController>{RightHand}/start"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Oculus"",
                    ""action"": ""Dashboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Oculus"",
            ""bindingGroup"": ""Oculus"",
            ""devices"": [
                {
                    ""devicePath"": ""<OpenVROculusTouchController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<OpenVROculusTouchController>{LeftHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<OpenVROculusTouchController>{RightHand}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Main
            m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
            m_Main_Velocity = m_Main.FindAction("Velocity", throwIfNotFound: true);
            m_Main_AutoShot = m_Main.FindAction("AutoShot", throwIfNotFound: true);
            m_Main_Emote = m_Main.FindAction("Emote", throwIfNotFound: true);
            m_Main_OpenMenu = m_Main.FindAction("OpenMenu", throwIfNotFound: true);
            m_Main_SpecialShoot = m_Main.FindAction("SpecialShoot", throwIfNotFound: true);
            // Menu
            m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
            m_Menu_HideMenu = m_Menu.FindAction("HideMenu", throwIfNotFound: true);
            // Oculus
            m_Oculus = asset.FindActionMap("Oculus", throwIfNotFound: true);
            m_Oculus_Dashboard = m_Oculus.FindAction("Dashboard", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }
        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Main
        private readonly InputActionMap m_Main;
        private IMainActions m_MainActionsCallbackInterface;
        private readonly InputAction m_Main_Velocity;
        private readonly InputAction m_Main_AutoShot;
        private readonly InputAction m_Main_Emote;
        private readonly InputAction m_Main_OpenMenu;
        private readonly InputAction m_Main_SpecialShoot;
        public struct MainActions
        {
            private @PlayerActions m_Wrapper;
            public MainActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Velocity => m_Wrapper.m_Main_Velocity;
            public InputAction @AutoShot => m_Wrapper.m_Main_AutoShot;
            public InputAction @Emote => m_Wrapper.m_Main_Emote;
            public InputAction @OpenMenu => m_Wrapper.m_Main_OpenMenu;
            public InputAction @SpecialShoot => m_Wrapper.m_Main_SpecialShoot;
            public InputActionMap Get() { return m_Wrapper.m_Main; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
            public void SetCallbacks(IMainActions instance)
            {
                if (m_Wrapper.m_MainActionsCallbackInterface != null)
                {
                    @Velocity.started -= m_Wrapper.m_MainActionsCallbackInterface.OnVelocity;
                    @Velocity.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnVelocity;
                    @Velocity.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnVelocity;
                    @AutoShot.started -= m_Wrapper.m_MainActionsCallbackInterface.OnAutoShot;
                    @AutoShot.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnAutoShot;
                    @AutoShot.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnAutoShot;
                    @Emote.started -= m_Wrapper.m_MainActionsCallbackInterface.OnEmote;
                    @Emote.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnEmote;
                    @Emote.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnEmote;
                    @OpenMenu.started -= m_Wrapper.m_MainActionsCallbackInterface.OnOpenMenu;
                    @OpenMenu.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnOpenMenu;
                    @OpenMenu.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnOpenMenu;
                    @SpecialShoot.started -= m_Wrapper.m_MainActionsCallbackInterface.OnSpecialShoot;
                    @SpecialShoot.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnSpecialShoot;
                    @SpecialShoot.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnSpecialShoot;
                }
                m_Wrapper.m_MainActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Velocity.started += instance.OnVelocity;
                    @Velocity.performed += instance.OnVelocity;
                    @Velocity.canceled += instance.OnVelocity;
                    @AutoShot.started += instance.OnAutoShot;
                    @AutoShot.performed += instance.OnAutoShot;
                    @AutoShot.canceled += instance.OnAutoShot;
                    @Emote.started += instance.OnEmote;
                    @Emote.performed += instance.OnEmote;
                    @Emote.canceled += instance.OnEmote;
                    @OpenMenu.started += instance.OnOpenMenu;
                    @OpenMenu.performed += instance.OnOpenMenu;
                    @OpenMenu.canceled += instance.OnOpenMenu;
                    @SpecialShoot.started += instance.OnSpecialShoot;
                    @SpecialShoot.performed += instance.OnSpecialShoot;
                    @SpecialShoot.canceled += instance.OnSpecialShoot;
                }
            }
        }
        public MainActions @Main => new MainActions(this);

        // Menu
        private readonly InputActionMap m_Menu;
        private IMenuActions m_MenuActionsCallbackInterface;
        private readonly InputAction m_Menu_HideMenu;
        public struct MenuActions
        {
            private @PlayerActions m_Wrapper;
            public MenuActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @HideMenu => m_Wrapper.m_Menu_HideMenu;
            public InputActionMap Get() { return m_Wrapper.m_Menu; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
            public void SetCallbacks(IMenuActions instance)
            {
                if (m_Wrapper.m_MenuActionsCallbackInterface != null)
                {
                    @HideMenu.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnHideMenu;
                    @HideMenu.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnHideMenu;
                    @HideMenu.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnHideMenu;
                }
                m_Wrapper.m_MenuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @HideMenu.started += instance.OnHideMenu;
                    @HideMenu.performed += instance.OnHideMenu;
                    @HideMenu.canceled += instance.OnHideMenu;
                }
            }
        }
        public MenuActions @Menu => new MenuActions(this);

        // Oculus
        private readonly InputActionMap m_Oculus;
        private IOculusActions m_OculusActionsCallbackInterface;
        private readonly InputAction m_Oculus_Dashboard;
        public struct OculusActions
        {
            private @PlayerActions m_Wrapper;
            public OculusActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Dashboard => m_Wrapper.m_Oculus_Dashboard;
            public InputActionMap Get() { return m_Wrapper.m_Oculus; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(OculusActions set) { return set.Get(); }
            public void SetCallbacks(IOculusActions instance)
            {
                if (m_Wrapper.m_OculusActionsCallbackInterface != null)
                {
                    @Dashboard.started -= m_Wrapper.m_OculusActionsCallbackInterface.OnDashboard;
                    @Dashboard.performed -= m_Wrapper.m_OculusActionsCallbackInterface.OnDashboard;
                    @Dashboard.canceled -= m_Wrapper.m_OculusActionsCallbackInterface.OnDashboard;
                }
                m_Wrapper.m_OculusActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Dashboard.started += instance.OnDashboard;
                    @Dashboard.performed += instance.OnDashboard;
                    @Dashboard.canceled += instance.OnDashboard;
                }
            }
        }
        public OculusActions @Oculus => new OculusActions(this);
        private int m_OculusSchemeIndex = -1;
        public InputControlScheme OculusScheme
        {
            get
            {
                if (m_OculusSchemeIndex == -1) m_OculusSchemeIndex = asset.FindControlSchemeIndex("Oculus");
                return asset.controlSchemes[m_OculusSchemeIndex];
            }
        }
        public interface IMainActions
        {
            void OnVelocity(InputAction.CallbackContext context);
            void OnAutoShot(InputAction.CallbackContext context);
            void OnEmote(InputAction.CallbackContext context);
            void OnOpenMenu(InputAction.CallbackContext context);
            void OnSpecialShoot(InputAction.CallbackContext context);
        }
        public interface IMenuActions
        {
            void OnHideMenu(InputAction.CallbackContext context);
        }
        public interface IOculusActions
        {
            void OnDashboard(InputAction.CallbackContext context);
        }
    }
}
